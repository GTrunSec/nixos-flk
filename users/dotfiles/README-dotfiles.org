#+TITLE: GTrunSec's dotfiles README
#+AUTHOR: GTrunSec
#+EMAIL: gtrunsec@hardenedlinux.org
#+DATE: 2020-09-17 Mon
#+PROPERTY: header-args:sh :prologue "exec 2>&1" :epilogue ":"
* zsh
** config
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/zshrc"
#! /usr/bin/env zsh
autoload -Uz promptinit
promptinit
# zsh-mime-setup
autoload colors
colors
autoload -Uz zmv # move function
autoload -Uz zed # edit functions within zle

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
        fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
        fd --type d --hidden --follow --exclude ".git" . "$1"
}

if [ -n "''${commands[fzf-share]}" ]; then
            source "$(fzf-share)/key-bindings.zsh"
fi

function cd() {
        if [[ "$#" != 0 ]]; then
                    builtin cd "$@";
                    return
        fi
        while true; do
                local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
                local dir="$(printf '%s\n' "''${lsd[@]}" |
                        fzf --reverse --preview '
                                        __cd_nxt="$(echo {})";
                                        __cd_path="$(echo $(pwd)/''${__cd_nxt} | sed "s;//;/;")";
                                        echo $__cd_path;
                                        echo;
                                        ls -p --color=always "''${__cd_path}";
                                        ')"
                [[ ''${#dir} != 0 ]] || return 0
                builtin cd "$dir" &> /dev/null
                                done
}


function prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}

function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}


function jupyter-env() {
  cd ~/data/Jupyter-data-science-environment
  nix-shell my-default.nix --option build-use-sandbox false --command "jupyter lab --ip $1"
}

zle -N pet-select
stty -ixon
bindkey '^s' pet-select



bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

export TERM=xterm-256color

if [[ "$OSTYPE" == "darwin"* ]]; then
          export NIX_PATH="$HOME/.nix-defexpr/channels"
          export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
fi

[[ -n "$key[Up]"   ]] && bindkey -- "$key[Up]" up-line-or-beginning-search
[[ -n "$key[Down]" ]] && bindkey -- "$key[Down]" down-line-or-beginning-search
# nix direnv hook
eval "$(direnv hook zsh)"
unalias z
eval "$(zoxide init zsh)"

#+end_src
** private key.sh

* xinitrc
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/.xinitrc"
#!/bin/sh
xsetroot -cursor_name left_ptr
#+end_src
* promnesia
#+begin_src python :exports both :tangle "~/.config/nixpkgs/nixos-flk/profiles/data/config.py"
#!/usr/bin/env python3.7
from promnesia import Source
from promnesia.sources import auto
from promnesia.sources import guess
'''
List of sources to use

You can specify your own, add more sources, etc.
See https://github.com/karlicoss/promnesia#setup for more information
'''
SOURCES = [
    # Source(
    #     auto.index,
    #     # just some arbitrary directory with html files
    #     '~/Dropbox/org-notes',

    #     name='org-notes',

    #     ignored=[ '*.html', '*.glass', '*.jpeg', '*.png', '*.jpg', '*.py', '*.csv', '*.json', '*.org.organice-bak' ],
    # ),

    Source(
        auto.index,
        # just some arbitrary directory with html files
        '~/.config/nixpkgs/dotfiles/doom-emacs',

        name='doom-emacs',

        ignored=[ '*.html', '*.glass', '*.jpeg', '*.png', '*.jpg', '*.el', '*.elc' ],
    ),

    Source(
        auto.index,
        # just some arbitrary directory with html files
        '~/Dropbox/org-notes/braindump',

        name='my-braindump',

        ignored=[ '*.html', '*.glass', '*.jpeg', '*.png', '*.jpg', '*.el', '*.elc' ],
    ),
]

'''
    Optional setting.
    A directory to keep intemediate caches in order to speed up indexing.
    If not specified, caching isn't used.
'''
CACHE_DIR = '/tmp/promnesia_cache/'

FILTERS = [
    'mail.google.com',
    '192.168.0.',
    '10.220.170.',
    # you can use regexes too!
    'redditmedia.com.*.(jpg|png|gif)',
]
#+end_src
* pet
** config.toml
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/pet/config.toml"
[General]
  snippetfile = "/home/gtrun/.config/nixpkgs/dotfiles/pet/snippet.toml"
  editor = "emacs"
  column = 40
  selectcmd = "fzf --ansi"
  backend = "gist"
  sortby = ""

[Gist]
  file_name = "pet-snippet.toml"
  access_token = ""
  gist_id = ""
  public = false
  auto_sync = false

[GitLab]
  file_name = "pet-snippet.toml"
  access_token = ""
  url = ""
  id = ""
  visibility = "private"
  auto_sync = false
#+end_src
** snippet.toml
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/pet/snippet.toml"
[[snippets]]
  description = "cut zeek log"
  command = "cat <log> | zeek-cut <field>"
  output = ""

###vast
[[snippets]]
  description = "zeek|vast: import zeek logs to vast"
  command = "zcat <ZeekLogsPath/*.log.gz> | vast import zeek"
  output = ""

[[snippets]]
  description = "zeek|vast: export zeek logs filtered by addr "
  command = " vast export zeek ':addr in <addr>'"
  output = ""


[[snippets]]
  description = "docker: clean regex"
  command = "docker rmi (docker images --filter=reference='<regex>' -q)"
  output = ""

### deepsea
[[snippets]]
  description = "deepsea: Inline CSS with template"
  command = "deepsea --config template.yaml content inline"
  output = ""


[[snippets]]
  description = "deepsea: Create a TXT verson from the HTML version (.ttpl)"
  command = "deepsea --config template.yaml content multipart"
  output = ""


[[snippets]]
  description = "deepsea-Step1: create DB and createtable "
  command = "deepsea -t --config template.yaml storage -D template.db manager  -T createtable"
  output = "if this command failed, you can touch a db <name>.db file"

[[snippets]]
  description = "deepsea: load marks from CSV"
  command = "deepsea -t --config template.yaml "

[[snippets]]
  description = "deepsea: show the marks are loaded"
  command = "deepsea --config template.yaml  storage  -d template.db manager  -T showmarks"
  output = ""


[[snippets]]
  description = "deepsea: mailclient"
  command = "deepsea mailclient --config template.yaml"
  output = ""
#+end_src 
** darwin-config.toml
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/pet/darwin-config.toml"
[General]
  snippetfile = "/Users/gtrun/.config/nixpkgs/dotfiles/pet/snippet.toml"
  editor = "emacs"
  column = 40
  selectcmd = "fzf --ansi"
  backend = "gist"
  sortby = ""

[Gist]
  file_name = "pet-snippet.toml"
  access_token = ""
  gist_id = ""
  public = false
  auto_sync = false

[GitLab]
  file_name = "pet-snippet.toml"
  access_token = ""
  url = ""
  id = ""
  visibility = "private"
  auto_sync = false
#+end_src
* i3
** config
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/i3//config"
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).

font pango:DejaVu Sans Mono,  Font Awesome 5 Free solid 18

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod


# start a terminal
bindsym Mod4+Return exec alacritty

# kill focused window
bindsym Mod4+q kill


# start dmenu (a program launcher)
bindsym $mod+Tab exec --no-startup-id rofi -show window
bindsym $mod+Shift+d exec --no-startup-id rofi -show run
bindsym Mod4+d exec --no-startup-id rofi -show drun
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus

bindsym ctrl+Shift+j exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh focus left
bindsym ctrl+Shift+k exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh focus down
bindsym ctrl+Shift+i exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh focus up
bindsym ctrl+Shift+l exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh focus right


# alternatively, you can use the cursor keys:
bindsym ctrl+Shift+Left exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh move left
bindsym ctrl+Shift+Down exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh move down
bindsym ctrl+Shift+Up exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh move up
bindsym ctrl+Shift+Right exec --no-startup-id bash ~/.config/i3/move-cursor-window-center.sh move right


# split in horizontal orientation
bindsym $mod+Shift+h split h

# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym Mod4+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym Mod4+s layout stacking
bindsym Mod4+w layout tabbed
bindsym Mod4+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym ctrl+Shift+space focus mode_toggle

# focus the parent container
bindsym $mod+Shift+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym Mod4+1 workspace $ws1
bindsym Mod4+2 workspace $ws2
bindsym Mod4+3 workspace $ws3
bindsym Mod4+4 workspace $ws4
bindsym Mod4+5 workspace $ws5
bindsym Mod4+6 workspace $ws6
bindsym Mod4+7 workspace $ws7
bindsym Mod4+8 workspace $ws8
bindsym Mod4+9 workspace $ws9
bindsym Mod4+0 workspace $ws10

# move focused container to workspace
bindsym ctrl+Shift+1 move container to workspace $ws1
bindsym ctrl+Shift+2 move container to workspace $ws2
bindsym ctrl+Shift+3 move container to workspace $ws3
bindsym ctrl+Shift+4 move container to workspace $ws4
bindsym ctrl+Shift+5 move container to workspace $ws5
bindsym ctrl+Shift+6 move container to workspace $ws6
bindsym ctrl+Shift+7 move container to workspace $ws7
bindsym ctrl+Shift+8 move container to workspace $ws8
bindsym ctrl+Shift+9 move container to workspace $ws9
bindsym ctrl+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+ctrl+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+ctrl++r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exitshortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym Mod4+b mode "resize"

# https://www.reddit.com/r/i3wm/comments/b76zvi/autorandr_and_feh_not_playing_well_together/
# Automatically detect screen resolution
exec_always --no-startup-id autorandr home-1

exec_always --no-startup-id bash $HOME/.config/polybar/launch.sh
# Compton
exec_always --no-startup-id bash $HOME/.config/nixpkgs/dotfiles/polybar/compton.sh
# adguard-home
#exec --no-startup-id bash $HOME/.config/nixpkgs/sh/adguard-home.sh

#applcation
# exec --no-startup-id polar-bookshel
# exec --no-startup-id emacs
# exec --no-startup-id gitkraken

# exec --no-startup-id wmctrl -c Plasma
# for_window [title="Desktop — Plasma"] kill; floating enable; border none
# for_window [class="Plasma"] floating enable
# for_window [class="krunner"] floating enable
# for_window [class="Kmix"] floating enable
# for_window [class="Klipper"] floating enable
# for_window [class="Plasmoidviewer"] floating enable

# # >>> Window Rules <<<

# # >>> Avoid tiling for non-Plasma stuff <<<
#for_window [window_role="pop-up"] floating enable
# for_window [window_role="bubble"] floating enable
# for_window [window_role="task_dialog"] floating enable
#for_window [window_role="Preferences"] floating enable
#for_window [window_role="About"] floating enable
# for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable

# fix Blank screen
# https://www.reddit.com/r/i3wm/comments/7cy60c/blank_save_screen/
floating_minimum_size 1800 x 1700
floating_maximum_size 3000 x 2000
#i3-gaps
for_window [class="^.*"] border pixel 0
for_window [class="^.*"] move position center
gaps inner 4
gaps outer -4
smart_gaps on
smart_borders on

#rofi_power menu
bindsym Mod4+Shift+q exec bash ~/.config/rofi/powermenu.sh

#Screenshot

#bindsym Mod4+r exec --no-startup-id flameshot gui -p ~/Dropbox/Pictures/snap
bindsym Mod4+r exec --no-startup-id spectacle -r
bindsym Mod4+t exec --no-startup-id deepin-screenshot
## floatings
#for_window [class="XTerm"] floating enable, border normal
for_window [class="feh"] floating enable, border normal
#for_window [class=""] fullscreen enable

# Wallpaper
exec_always --no-startup-id feh --randomize --bg-fill ~/.config/nixpkgs/dotfiles/wallpaper/sky-sea/ned-rogers-forest-forestchoir-concept01-002_2019-07-27_14-07-36.jpeg
exec --no-startup-id fcitx -d -r


##nix-daemon

exec_always --no-startup-id xset dpms 500


#workspace
assign [class="^Emacs$"] → 2
for_window [title="^Enpass$"] move container to workspace $ws7
#assign [class="^Chromium-browser$"] → 3
assign [class="^brave$"] → 3
assign [class="^polar-bookshelf$"] → 4
assign [class="^Okular$"] → 3
#git workspace
assign [class="^GitKraken$"] → 5

mode "swap_windows" {
    # move window 2 to window 1
    bindsym --whole-window $mod+Button1 move window to mark swap, unmark, mode "default"

    # back to normal: Enter or Escape
    bindsym Return unmark, mode "default"
    bindsym Escape unmark, mode "default"
}

# mark window 1
bindsym --whole-window $mod+Button1 mark swap, mode "swap_windows"


# Colors

#name                   #top    #border #text
client.focused          #747C84 #F3F4F5 #747C84 #F3F4F5
client.unfocused        #747C84 #747C84 #F3F4F5 #747C84
client.focused_inactive #747C84 #747C84 #F3F4F5 #747C84
client.urgent #747C84 #747C84 #F3F4F5 #747C84
#+end_src
** move-cursor-window-center.sh
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/i3/move-cursor-window-center.sh"
#!/bin/sh
eval i3-msg $*
HERE=`xdotool getwindowfocus`

ULX=`xwininfo -id $HERE | grep "  Absolute upper-left X:" | awk '{print $4}'`
ULY=`xwininfo -id $HERE | grep "  Absolute upper-left Y:" | awk '{print $4}'`

if [ $ULX != "-1" -o $ULY != "-1" ]; then
    eval `xdotool getwindowgeometry --shell $HERE`

    NX=`expr $WIDTH / 2`
    NY=`expr $HEIGHT / 2`

    xdotool mousemove --window $WINDOW $NX $NY
fi
#+end_src
* polybar
** config
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/polybar/config"
;==============================================================
;
;   .______     ______    __      ____    ____ .______        ___      .______
;   |   _  \   /  __  \  |  |     \   \  /   / |   _  \      /   \     |   _  \
;   |  |_)  | |  |  |  | |  |      \   \/   /  |  |_)  |    /  ^  \    |  |_)  |
;   |   ___/  |  |  |  | |  |       \_    _/   |   _  <    /  /_\  \   |      /
;   |  |      |  `--'  | |  `----.    |  |     |  |_)  |  /  _____  \  |  |\  \----.
;   | _|       \______/  |_______|    |__|     |______/  /__/     \__\ | _| `._____|
;
;   Polybar de SeraphyBR (Luiz Junio)
;   email => luisjuniorbr@gmail.com
;
;   Para aprender mais sobre como configurar o Polybar
;   vá para: https://github.com/jaagr/polybar
;
;   O arquivo README está cheio de informação.
;
;==============================================================

[colors]
; #RRGGBB ~ RGB
; #AARRGGBB ~ RGBA

background = #24292E
foreground = #FFFFFF
border = ${self.background}
alert = #FF0000
empty = #555555

# Modules colors
user = #7DF059
volume = #8FF6FF
xbacklight = #C8F059
nvidia = #7FFF00
ram = #D6AA3F
cpu = #D6AA3F
temperature = #DC143C
bluetooth = #00BFFF
wifi = #00BFFF
ethernet = #27A2FF
calendar = #00FF7F
clock = #00FF7F
battery = #FFFF00
files = #1DB954
mocp = #FBA922
mpd-playing = #53FF56
mpd-paused = #FBA922
mpd-offline = #69656F
spotify = #1DB954
xwindow = #FF4500
weather = #00BFFF
uptime = #9B78F1
powermenu = #FFA707
powermenu-close = #FF4500

bspwm = #7FFF00
bspwm-alert = #FF4500
bspwm-background = #3F3F3F
bspwm-dimmed = #FBA922
################################################################################

[bar/top]
; Use the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
monitor = ${env:MONITOR:DP-0}
width = 130%
height = 40
;offset-x = 0%
;offset-y = 1%

fixed-center = true

background = ${colors.background}
foreground = ${colors.foreground}

underline-size = 2
overline-size = 2

border-size = 3
border-color = ${colors.background}

padding-left = 1
padding-right = 1

module-margin-left = 2
module-margin-right = 2

font-0 = "Hack:size=22;2"
font-1 = "font\-logos:size=22"
font-2 = "FontAwesome:size=24;2"
font-3 = "MaterialIcons:size=24;2"

modules-left = i3
modules-right = volume filesystem-slash xbacklight bbswitch_show memory cpu temperature calendar clock

################################################################################

[bar/bottom]
monitor = ${env:MONITOR:eDP-1}
width = 130%
height = 50
#offset-x = 1%
#offset-y = 1%
radius = 0.0
fixed-center = true

background = ${colors.background}
foreground = ${colors.foreground}

line-size = 3

border-size = 3
border-color = ${colors.border}

padding-left = 2
padding-right = 2

bottom = true

module-margin-left = 2
module-margin-right = 2

font-0 = "Hack:size=23;2"
font-1 = "FontAwesome:size=24;2"
font-2 = "MaterialIcons:size=24;2"
font-3 = "Weather Icons:size=24;2"
font-4 = "Noto Sans CJK JP:size=23;2"

;modules-left = spotify mocp
modules-left = mpd networkspeedup networkspeeddown
modules-center = xwindow
modules-right = openweathermap-detailed powermenu

tray-maxsize = 22
tray-position = left
tray-padding = 2
tray-background = ${colors.background}

###############################################################################

[module/xwindow]
type = internal/xwindow
label = %title:0:46:...%
format-underline = ${colors.xwindow}
format-prefix = " "
format-suffix = " "
format-prefix-foreground = ${self.format-underline}
format-suffix-foreground = ${self.format-underline}

###############################################################################

[module/i3]
type = internal/i3
format = <label-state> <label-mode>
index-sort = true
wrapping-scroll = false
strip-wsnumbers = true
pin-workspaces = true

label-mode-padding = 2
label-mode-foreground = #000
label-mode-background = ${colors.background}

label-focused = %name%
label-focused-background = ${colors.background}
label-focused-underline = ${colors.bspwm}
label-focused-padding = 4

label-unfocused = %name%
label-unfocused-padding =  4

label-urgent = %name%!
label-urgent-background = ${colors.bspwm-dimmed}
label-urgent-padding = 4

label-visible = %name%
label-visible-background = ${colors.background}
label-visible-underline = ${colors.bspwm}
label-visible-padding = 4

ws-icon-0 = 1;
ws-icon-1 = 2;
ws-icon-2 = 3;
ws-icon-3 = 4;
ws-icon-4 = 5;
ws-icon-5 = 6;
ws-icon-6 = 7;
ws-icon-7 = 8;
ws-icon-8 = 9;
ws-icon-9 = 10;


##############################################################################
[module/filesystem-slash]
type = internal/fs
interval = 2
mount-0 = /
label-mounted = "%{F#5b5b5b}%{F-} %percentage_used%%"
##############################################################################

[module/mocp]
type = custom/script
interval = 1.5

format = <label>
label-maxlen = 40
format-prefix = "  "
format-suffix = "  "
format-prefix-foreground = ${colors.mocp}
format-suffix-foreground = ${colors.mocp}
format-underline = ${colors.mocp}
exec = ~/.config/polybar/Scripts/player-moc.sh

click-left = mocp -f
click-right = mocp -r
click-middle = mocp -G

#############################################################################

[module/mpd]
type = internal/mpd
host = localhost
port = 6600
interval = 1

format-playing = "%{A1:mpc next: A2:mpc toggle: A3:mpc prev:} <label-song> %{A A A}"
format-playing-prefix = 
format-playing-prefix-foreground = ${colors.mpd-playing}
format-playing-suffix = 
format-playing-suffix-foreground = ${colors.mpd-playing}
format-playing-underline = ${colors.mpd-playing}

format-paused = "%{A1:mpc next: A2:mpc toggle: A3:mpc prev:} <label-song> %{A A A}"
format-paused-prefix = 
format-paused-prefix-foreground = ${colors.mpd-paused}
format-paused-suffix = 
format-paused-suffix-foreground = ${colors.mpd-paused}
format-paused-underline = ${colors.mpd-paused}

format-offline = " <label-offline> "
format-offline-prefix = 
format-offline-prefix-foreground = ${colors.mpd-offline}
format-offline-suffix = 
format-offline-suffix-foreground = ${colors.mpd-offline}
format-offline-underline = ${colors.mpd-offline}

; Available tokens:
;   %artist%
;   %album-artist%
;   %album%
;   %date%
;   %title%
; Default: %artist% - %title%
label-song = "%title% - %album%"
label-song-maxlen = 46

; Available tokens:
;   %elapsed%
;   %total%
; Default: %elapsed% / %total%
label-time = "%elapsed% / %total%"

label-offline = "mpd is offline"

; Only applies if <bar-progress> is used
bar-progress-width = 10
;bar-progress-indicator =
bar-progress-fill = ""
bar-progress-fill-foreground = #1db954
bar-progress-empty = ""
##########################################################################

[module/spotify]
type = custom/script
interval = 1.5
format-prefix = "  "
format-suffix = "  "
format-prefix-foreground = ${colors.spotify}
format-suffix-foreground = ${colors.spotify}
format = <label>
exec = python ~/.config/polybar/Scripts/polybar-spotify/spotify_status.py -f '{song} by {artist}' -t 32

click-left = playerctl next
click-right = playerctl previous
click-middle = playerctl play-pause

format-underline = ${colors.spotify}
###############################################################################

[module/xbacklight]
type = internal/backlight
card = intel_backlight

format = <label> <bar>
label = 
label-foreground = ${colors.xbacklight}

bar-width = 10
bar-indicator =
bar-indicator-foreground = ${colors.xbacklight}
bar-indicator-font = 2
bar-fill = ""
bar-fill-font = 1
bar-fill-foreground = ${colors.xbacklight}
bar-empty = ""
bar-empty-font = 1
bar-empty-foreground = ${colors.empty}

#############################################################################

[module/cpu]
type = internal/cpu
interval = 2
format-underline =  ${colors.cpu}
format-suffix = "  "
format-suffix-foreground = ${self.format-underline}
label = %percentage%%

##############################################################################

[module/memory]
type = internal/memory
interval = 2
format-underline =  ${colors.ram}
format-suffix = "  "
format-suffix-foreground = ${self.format-underline}
label = %percentage_used%%

###################################################################
[module/networkspeedup]
type = internal/network
interface = eno1
label-connected = "%upspeed:9%"
format-connected = <label-connected>
format-connected-prefix = " "
format-connected-prefix-foreground = #5b

[module/networkspeeddown]
type = internal/network
interface = eno1
label-connected = "%downspeed:7%"
format-connected = <label-connected>
format-connected-prefix = " "
format-connected-prefix-foreground = #5b

###################################################################
[module/wireless-network]
type = internal/network
interface = wlan0
interval = 3.0

format-connected = <label-connected>
format-connected-suffix = "  "
format-connected-suffix-foreground = ${self.format-connected-underline}
format-connected-underline = ${colors.wifi}

label-connected = %essid%
label-connected-maxlen = 12
label-disconnected = "Sem Conexão"

format-disconnected-suffix = "  "
format-disconnected = <label-disconnected>
format-disconnected-underline = ${self.format-connected-underline}
format-disconnected-suffix-foreground = ${self.format-disconnected-underline}

###############################################################################

[module/wired-network]
type = internal/network
interface = eno1
interval = 3.0

format-connected = <label-connected>
format-connected-underline = ${colors.ethernet}
format-connected-suffix = "%{T3}  %{T-}"
format-connected-suffix-foreground = ${self.format-connected-underline}

label-connected = %local_ip%
label-disconnected =

format-disconnected = <label-disconnected>
#####################################################################

[module/clock]
type = internal/date
interval = 1
#date = " %d-%m-%Y "
#date-alt = " %d-%m-%Y "
time = %H:%M:%S
time-alt = %H:%M

format = " <label>"
format-underline = ${colors.clock}
format-suffix = "  "
format-suffix-foreground = ${self.format-underline}
format-foreground = ${colors.foreground}

label = %time%
label-font = 10

##################################################################

[module/calendar]
type = custom/script
exec = "date +%d-%m-%Y"
interval = 30

format = " <label>"
format-underline = ${colors.calendar}
format-suffix = "  "
format-suffix-foreground = ${self.format-underline}
format-foreground = ${colors.foreground}

click-left = gsimplecal &
#click-left = notify-send "$(cal)"

#########################################################

[module/volume]
type = internal/pulseaudio

format-volume = <label-volume> <bar-volume>
label-volume = 
label-volume-foreground = ${colors.volume}

format-muted-suffix = "  "
format-muted-foreground = ${colors.volume}
label-muted = " Som Mudo"
format-muted-underline = ${colors.volume}

bar-volume-width = 10
bar-volume-foreground-0 = ${colors.volume}

bar-volume-gradient = false
bar-volume-indicator =
bar-volume-indicator-font = 0
bar-volume-fill = ""
bar-volume-fill-font = 1
bar-volume-empty = ""
bar-volume-empty-font = 1
bar-volume-empty-foreground = ${colors.empty}

##########################################################

[module/battery]
type = internal/battery
battery = BAT0
adapter = ADP0
full-at = 99

format-charging =  <label-charging> <animation-charging>
format-charging-underline = ${colors.battery}

format-discharging = <label-discharging> <ramp-capacity>
format-discharging-underline = ${self.format-charging-underline}

format-full-suffix = " "
format-full-suffix-foreground = ${self.format-charging-underline}
format-full-underline = ${self.format-charging-underline}

ramp-capacity-0 = " "
ramp-capacity-1 = " "
ramp-capacity-2 = " "
ramp-capacity-3 = " "
ramp-capacity-4 = " "

ramp-capacity-foreground = ${self.format-charging-underline}

animation-charging-0 = " "
animation-charging-1 = " "
animation-charging-2 = " "
animation-charging-3 = " "
animation-charging-4 = " "

animation-charging-foreground = ${self.format-charging-underline}
animation-charging-framerate = 750

##########################################################

[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 80

format =  <label> <ramp>
format-underline = ${colors.temperature}
format-warn = <label-warn> <ramp>
format-warn-underline = ${self.format-underline}

label = %temperature-c%
label-warn = %temperature-c%
label-warn-foreground = ${colors.alert}

ramp-0 = 
ramp-1 = 
ramp-2 = 
ramp-3 = 
ramp-4 = 
ramp-foreground = ${colors.temperature}

#########################################################

[module/powermenu]
type = custom/menu

format-spacing = 1
format-underline =  ${colors.powermenu}

label-open = "%{T3}  %{T-}"
label-open-foreground = ${colors.powermenu}
label-close = "  "
label-close-foreground = ${colors.powermenu-close}
label-separator = |
label-separator-foreground = ${colors.foreground}

menu-0-0 = "  "
menu-0-0-exec = menu-open-1

menu-0-1 = "  "
menu-0-1-exec = menu-open-2

menu-0-2 = "  "
menu-0-2-exec = menu-open-3

menu-0-3 =  "  "
menu-0-3-exec = betterlockscreen -l

menu-0-4 = "  |"
menu-0-4-exec = bspc quit

menu-1-0 = Reiniciar
# Using elogind
menu-1-0-exec = loginctl reboot

menu-1-1 =  |
menu-1-1-exec = menu-open-0

menu-2-0 = Desligar
# Using elogind
menu-2-0-exec = loginctl poweroff

menu-2-1 =  |
menu-2-1-exec = menu-open-0

menu-3-0 = Suspender
menu-3-0-exec = betterlockscreen -s

menu-3-1 =  |
menu-3-1-exec = menu-open-0

##############################################################################

[module/uptime]
type = custom/script
interval = 30
exec = ~/.config/polybar/Scripts/uptime.sh
label = %output%
format = <label>
format-suffix = "  "
format-suffix-foreground =  ${colors.uptime}
format-underline =  ${colors.uptime}

###############################################################################

[module/openweathermap-detailed]
type = custom/script
exec = ~/.config/polybar/Scripts/openweathermap-detailed.sh
interval = 600
format = " <label> "
format-underline = ${colors.weather}
format-foreground = ${colors.foreground}

###############################################################################

[module/bbswitch_show]
type = custom/script
interval = 2
format = <label>
format-underline = ${colors.nvidia}
click-left = "optirun -b none nvidia-settings -c :8"
exec = ~/.config/polybar/Scripts/bbswitch.sh

##############################################################################

[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top value
;   Used for bottom aligned bars
margin-top = 0

; Adjust the _NET_WM_STRUT_PARTIAL bottom value
;   Used for top aligned bars
margin-bottom = 0

###########################################################################

[settings]
; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = true


; vim:ft=dosini
#+end_src
** lanuch.sh
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/polybar/launch.sh"
#!/bin/sh

# Terminate already running bar instances
kill -9 $(pgrep polybar)
# Wait until the processes have been shut down
while pgrep -x polybar >/dev/null; do sleep 1; done

# Launch bar1 and bar2
for monitor in $(polybar --list-monitors | cut -d ":" -f1); do
    MONITOR=$monitor polybar top --reload --quiet &
    MONITOR=$monitor polybar bottom --reload --quiet &
done

echo "Bars launched..."
dunstify -u low  "Bars launched"

#+end_src
** load compton
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/polybar/compton.sh"
#!/usr/bin/env sh

# Terminate already running bar instances
kill -9 $(pgrep compton)

# Wait until the processes have been shut down
while pgrep -u $UID -x compton >/dev/null; do sleep 1; done

compton --config /home/gtrun/.compton.conf &
#+end_src
* compton
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/.compton.conf"
# Shadow
shadow = false;
no-dnd-shadow = true;
no-dock-shadow = true;
clear-shadow = true;
shadow-radius = 7;
shadow-offset-x = -7;
shadow-offset-y = -7;
# shadow-opacity = 0.7;
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;
shadow-exclude = [
        "name = 'Notification'",
        "class_g = 'Conky'",
        "class_g ?= 'Notify-osd'",
        "class_g = 'Cairo-clock'",
        "_GTK_FRAME_EXTENTS@:c"
];
# shadow-exclude = "n:e:Notification";
# shadow-exclude-reg = "x10+0+0";
# xinerama-shadow-crop = true;

# Opacity
menu-opacity = 0.8;
#inactive-opacity = 0.8;
# active-opacity = 0.8;
frame-opacity = 1.0;
inactive-opacity-override = false;
# alpha-step = 0.06;
# inactive-dim = 0.2;
# inactive-dim-fixed = true;
# blur-background = true;
# blur-background-frame = true;
blur-kern = "3x3box"
# blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
# blur-background-fixed = true;
blur-background-exclude = [
        "window_type = 'dock'",
        "window_type = 'desktop'",
        "_GTK_FRAME_EXTENTS@:c"
];
# opacity-rule = [ "80:class_g = 'URxvt'" ];
opacity-rule = [
    "99:class_g = 'Firefox' && window_type = 'tooltip'",
    "99:class_g = 'Conky' && window_type = 'dock'",
    "0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];

# Fading
fading = true;
# fade-delta = 30;
fade-in-step = 0.1;
fade-out-step = 0.1;
# no-fading-openclose = true;
# no-fading-destroyed-argb = true;
fade-exclude = [ ];

# Other
backend = "xrender"
mark-wmwin-focused = true;
mark-ovredir-focused = true;
# use-ewmh-active-win = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 0;
vsync = "none";
dbe = false;
#paint-on-overlay = true;
# sw-opti = true;
# unredir-if-possible = true;
# unredir-if-possible-delay = 5000;
# unredir-if-possible-exclude = [ ];
focus-exclude = [ "class_g = 'Cairo-clock'" ];
detect-transient = true;
detect-client-leader = true;
invert-color-include = [ ];
# resize-damage = 1;

# GLX backend
# glx-no-stencil = true;
glx-copy-from-front = false;
# glx-use-copysubbuffermesa = true;
# glx-no-rebind-pixmap = true;
glx-swap-method = "undefined";
# glx-use-gpushader4 = true;
# xrender-sync = true;
# xrender-sync-fence = true;

# Window type settings
wintypes:
{
    tooltip =
    {
        fade = true;
        shadow = true;
        opacity = 0.75;
        focus = true;
    };

    dock =
    {
        opacity = 0.9;
    };
};
#+end_src
* rofi
** config
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/rofi/config"
rofi.theme: /home/gtrun/.config/rofi/rofi-themes/themes/arthur.rasi
#+end_src
** powermenu
#+begin_src conf :exports both :tangle "~/.config/nixpkgs/dotfiles/rofi/powermenu.sh"
#!/bin/bash
action=$(echo -e "lock\nlogout\nshutdown\nreboot" | rofi -dmenu -p "power:")

if [[ "$action" == "lock" ]]
then
    ~/.i3/i3lock-fancy-multimonitor/lock
fi

if [[ "$action" == "logout" ]]
then
    i3-msg exit
fi

if [[ "$action" == "shutdown" ]]
then
    shutdown now
fi

if [[ "$action" == "reboot" ]]
then
    reboot
fi
#+end_src
